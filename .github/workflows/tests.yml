name: Test

on: [push, pull_request]

jobs:
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}-${{hashFiles('**/requirements.txt')}}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        sudo apt-get install -y pandoc
        python -m pip install --upgrade pip
        python -m pip install .[docs]
        python -m pip install -r ./docs/doc-requirements.txt
    - name: Build docs
      run: |
        cd docs
        make html
  js:
    name: JavaScript
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}-${{hashFiles('**/requirements.txt')}}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install jupyterlab~=3.0
        npm install -g codecov

    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Get npm cache directory
      id: npm-cache-dir
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - uses: actions/cache@v2
      id: npm-cache
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: install, build, test
      run: |
        python -m pip install --upgrade --upgrade-strategy=eager -e ".[test]"
        npm test
        codecov
      env:
        CI: true
  python:
    name: Python
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}-${{hashFiles('**/requirements.txt')}}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        export NODE_OPTIONS="--openssl-legacy-provider"
        python -m pip install codecov
        python -m pip install --upgrade pip
        python -m pip install jupyterlab~=3.0
        python -m pip install --upgrade --upgrade-strategy=eager ".[test]"
    - name: Test with pytest
      run: |
        git config --global user.email CI@fake.com
        git config --global user.name "CI"
        pushd $(mktemp -d)
        py.test -l --cov-report xml --cov=nbdime --pyargs nbdime
        codecov
        popd
